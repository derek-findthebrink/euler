// Generated by CoffeeScript 1.9.3
(function() {
  var _, exports, findMultiples, genPrimesTo, isOdd, isPrime, num;

  _ = require("underscore");

  isOdd = function(num) {
    if (0 !== num % 2) {
      return true;
    }
    return false;
  };

  isPrime = function(num) {
    var a, c, check, checkComplete;
    a = Math.floor(Math.sqrt(num));
    checkComplete = false;
    check = function(x) {
      if (x < 2) {
        checkComplete = true;
        return true;
      } else if (num % x === 0) {
        checkComplete = true;
        return false;
      } else {
        return a = x - 1;
      }
    };
    while (!checkComplete) {
      c = check(a);
    }
    return c;
  };

  findMultiples = function(num) {
    var check, final, i;
    final = "none found!";
    i = Math.floor(num / 2);
    if (i % 2 === 0) {
      i--;
    }
    check = function(cnt) {
      var n, y, z;
      console.log(cnt);
      n = num % cnt;
      if (n === 0 && isPrime(cnt)) {
        console.log(cnt);
        return final = cnt;
      }
      if (cnt <= 1) {
        return final;
      }
      n = void 0;
      y = cnt - 2;
      z = function() {
        return check(y);
      };
      return setImmediate(z);
    };
    return check(i);
  };

  genPrimesTo = function(num) {
    var arr, check;
    arr = [];
    check = function(y) {
      var allowGC, z;
      if (y >= num) {
        return arr;
      }
      if (isPrime(y)) {
        arr.push(y);
      }
      z = y + 1;
      allowGC = function() {
        return check(z);
      };
      return setImmediate(allowGC);
    };
    return check(1);
  };

  num = 13195;

  num = num * 135;

  console.log(findMultiples(num));

  exports = module.exports = {
    isPrime: isPrime,
    findMultiples: findMultiples,
    genPrimesTo: genPrimesTo
  };

}).call(this);
